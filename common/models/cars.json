{
  "name": "cars",
  "plural": "cars",
  "base": "PersistedModel",
  "idInjection": false,
  "options": {
    "validateUpsert": true
  },
  "mixins": {
    "CascadeDelete": {
      "relations": [
        "comments",
        "cars_meta_details"
      ],
      "deepDelete": true
    }
  },
  "properties": {
    "id_c": {
      "type": "number",
      "id": true,
      "generated": true,
      "required": false,
      "doc": "This is the primary ID used to identify a contact"
    },
    "title_c": {
      "type": "string",
      "mysql": {
         "dataType": "Binary"
     }
    },
    "type_c": {
      "type": "number"
    },
    "model_c": {
      "type": "number"
    },
    "category_c": {
      "type": "number"
    },
    "year_c": {
      "type": "number"
    },
    "color_c": {
      "type": "string"
    },
    "odometer_c": {
      "type": "string"
    },
    "transmission_c": {
      "type": "string"
    },
    "status_c": {
      "type": "string"
    },
    "body_c": {
      "type": "string"
    },
    "form_c": {
      "type": "string"
    },
    "price_c": {
      "type": "string"
    },
    "Country_c": {
      "type": "number"
    },
    "city_c": {
      "type": "number"
    },
    "features_c": {
      "type": "number"
    },
    "images_c": {
      "type": "string"
    },
    "type_ads_c": {
      "type": "string"
    },
    "shows_c": {
      "type": "number"
    },
    "description_c": {
      "type": "string"
    },
    "special_c": {
      "type": "string"
    },
    "dateadd_c": {
      "type": "date"
    },
    "end_c": {
      "type": "number"
    },
    "id_user": {
      "type": "number"
    },
    "act_c": {
      "type": "number"
    },
    "vzt_c": {
      "type": "number"
    }
  },
  "validations": [],
  "relations": {
    "comments": {
      "type": "hasMany",
      "model": "comments",
      "foreignKey": "id_car",
      "options": {
        "nestRemoting": true
      }
    },
    "cars_meta_details": {
      "type": "hasMany",
      "model": "cars_meta",
      "foreignKey": "id_cars_m",
      "options": {
        "nestRemoting": true
      }
    }
  },
  "acls": [],
  "methods": {
    "cars_advertisment": {
      "accepts": [
        {"arg": "dynamic_filter", "type": "array",
          "description": "dynamic_filter object is an array of dynamic attributes filter and each object contains {op, code_m, _1} or {op, code_m, _1,_2} , don't use % when using like",
          "http": {
            "source": "query"
          }
        },
        {"arg": "static_filter", "type": "array",
          "description": "static_filter object is an array of table column attributes and each object contains {op, option, _1} or {op, option, _1, _2} , don't use % when using like",
          "http": {
            "source": "query"
          }
        },
        {"arg": "offset", "type": "number",
          "http": {
              "source": "query"
            }
        },
        {"arg": "limit", "type": "number",          
          "http": {
              "source": "query"
            }
          }
        ],
      "returns": [
        {
          "arg": "data",
          "type": "array",
          "root": true,
          "description": "return array of cars & meta_cars objects"
        }
      ],
      "description": "fetch cars according to cars_meta filters (dynamic fields)",
      "http": [
        {
          "path": "/cars_advertisment",
          "verb": "get"
        }
      ]
    }
  }
}
